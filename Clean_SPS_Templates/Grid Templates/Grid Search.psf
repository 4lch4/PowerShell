<File version="2.1">
  <FileID>%Indentifier%</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAC3TSURBVHhe7d15lJX1nefx7tOdmcx/c+aPnpMz
6ZnTcyadpCd2J52eTmISNXFrYxKMEROXuAKKxiQqUoCCgorgxqqCgMpaLAXUSlVR+77v+0bdukvd
WztVBbglfub3e4qKUJQRtEqB3/t9zusAt5773KU49fs+z71V9VdERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREjpZv+L7whS/4Lrnk
G767777bN2vWbAAAcIG4b84c3+WXX+b727/9W99f//Vf+8y63uat8H+pv/mbv4n8/d//vWbOnKkV
z7+s7MJKtfh6x3T2AACA81hrV5/qW7q0c/c+3XnHHfrKV74ic1Cvk8v8X8xnF/99BxJV3hJWdnWn
sqs6AADABSKrskPlrRFl5ZVq9qzZ+uIXv/jeyTX+o7vkG9/wPbP8eVWYxT+rsl3Zhv0TAABcODIq
2lTV3qvovQd16Xe/+/EDgH3NP7OgUnk1PuWYKQIAAFyYMiva1dLVqwULFn78ADB79mxfZ2hQuXYA
qD4CAAAuUPalgGD/ibMfAHzdg94ZgFxzZQAAcGGy7wfo6hlVVNSCsz0DMKD8ui4zBHQCADD1ajtV
WO9XcVNQJdOoqMGv/Fqfd5v2z6KGwKTbTZXixoAKTlk/C+q7zGWTbztV7GMaf4wT2bMA/p5j5zIA
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
VvKR0WH1TuMPA3L6DID9ZQj2tz7t37//NPY3DSYmJppPmO/s/hOY6S7U2azC9EQlFVapM2AGg8m2
+xQYAABg+kz3ADAZu4ZVV1eftv4kJSV5H/usbv+CHAByc3O9n6VsH8CnMTAw4P0KyInsf4TJtp9c
UMFQt3r7BzXU36tuc1nwjG0+HfufkgEAAKbHqQOAPfizZ4gn+1o8lexvHIxEIqetPXZNmmzb6WDX
0JKSkgtvAIiPj1dZWZl35y929tc12sdr/6MwAADA1LMDgF2A7RF4fn7+pF+LLzZ2DT106NCF8+uA
7QJoj4TLy8u9O2//vNjZx2lPE9nJ0P4nnex5AQB8evX19SotLXVifbGP0bIvN5zNweXnPgBY9o7a
N+e55GymMwDAp2O/1k72NfhidrZnls+LAQAAAHy2GAAAAHAQAwAAAA5iAAAAwEEMAAAAOIgBAAAA
BzEAAADgIAYAAAAcNK0DwKjZub0BAABwfjk2clRdUz0AWC2hEXX1DMsHAADOO3aNbjVrdeMpa/eU
DACWnSoAAMD56dTF35qyAQAAAFw4GAAAAHDQuQ8AfaNq7j7hXREAAFyYGoLHzADwx7MbAO65597g
0Oj7Gjgm70oAAODC1DfyJ739R5kBIOqDk8v8R/eLX9zYFhW18L2oqAXvzZ8fBQAALmALFix67+ab
bz5+cpknIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIicqi/+qv/Dzo/mG8LW22vAAAAAElFTkSuQmCC</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formMain" children="Controls">
    <Property name="AutoScaleDimensions">6, 13</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">584, 362</Property>
    <Property name="Name">formMain</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">%Title%</Property>
    <Event name="Load">formMain_Load</Event>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxSearch" children="Controls">
      <Property name="Anchor">Top, Left, Right</Property>
      <Property name="Location">13, 15</Property>
      <Property name="Name">textboxSearch</Property>
      <Property name="Size">477, 20</Property>
      <Property name="TabIndex">0</Property>
      <Event name="KeyUp">textboxSearch_KeyUp</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSearch" children="Controls">
      <Property name="Anchor">Top, Right</Property>
      <Property name="Location">496, 13</Property>
      <Property name="Name">buttonSearch</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Search</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSearch_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewResults" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="AllowUserToDeleteRows">False</Property>
      <Property name="Anchor">Top, Bottom, Left, Right</Property>
      <Property name="Location">12, 42</Property>
      <Property name="Name">datagridviewResults</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="Size">560, 279</Property>
      <Property name="TabIndex">2</Property>
      <Event name="ColumnHeaderMouseClick">datagridviewResults_ColumnHeaderMouseClick</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonExit" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="Location">497, 327</Property>
      <Property name="Name">buttonExit</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">E&amp;xit</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonExit_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonQuery" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">12, 327</Property>
      <Property name="Name">buttonQuery</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">3</Property>
      <Property name="Text">&amp;Query</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonQuery_Click</Event>
    </Object>
  </Object>
  <Code><![CDATA[#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			$Item,
			[Parameter(Mandatory = $false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
			-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView])
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param (
			[ValidateNotNull()]
			$InputObject,
			[ValidateNotNull()]
			[System.Data.DataTable]$Table,
			[switch]$RetainColumns,
			[switch]$FilterWMIProperties)
	
	if ($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @( ,$Table)
}
#endregion

#region Search Function
function SearchGrid()
{
	$RowIndex = 0
	$ColumnIndex = 0
	$seachString = $textboxSearch.Text
	
	if($seachString -eq "")
	{
		return
	}
	
	if($datagridviewResults.SelectedCells.Count -ne 0)
	{
		$startCell = $datagridviewResults.SelectedCells[0];
		$RowIndex = $startCell.RowIndex
		$ColumnIndex = $startCell.ColumnIndex + 1
	}
	
	$columnCount = $datagridviewResults.ColumnCount
	$rowCount = $datagridviewResults.RowCount
	for(;$RowIndex -lt $rowCount; $RowIndex++)
	{
		$Row = $datagridviewResults.Rows[$RowIndex]
		
		for(;$ColumnIndex -lt $columnCount; $ColumnIndex++)
		{
			$cell = $Row.Cells[$ColumnIndex]
			
			if($null -ne $cell.Value -and $cell.Value.ToString().IndexOf($seachString, [StringComparison]::OrdinalIgnoreCase) -ne -1)
			{
				$datagridviewResults.CurrentCell = $cell
				return
			}
		}
		
		$ColumnIndex = 0
	}
	
	$datagridviewResults.CurrentCell = $null
	[void][System.Windows.Forms.MessageBox]::Show("The search has reached the end of the grid.","String not Found")
	
}
#endregion

%ResultsFunction%

$formMain_Load={
	#TODO: Initialize Form Controls here
	
}

$buttonExit_Click={
	#TODO: Place custom script here
	$formMain.Close()
}

$buttonQuery_Click={
	$results = %ResultsFunctionCall%
	$results = ConvertTo-DataTable -InputObject $results -FilterWMIProperties
	Update-DataGridView -DataGridView $datagridviewResults -Item $results -AutoSizeColumns DisplayedCells
}

$buttonSearch_Click={
	#TODO: Place custom script here
	SearchGrid
}

$datagridviewResults_ColumnHeaderMouseClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	if($datagridviewResults.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridviewResults.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}

		$datagridviewResults.Sort($datagridviewResults.Columns[$_.ColumnIndex], $direction)
	}
}


$textboxSearch_KeyUp=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	if($_.KeyCode -eq 'Enter' -and $buttonSearch.Enabled)
	{
		SearchGrid	
		$_.SuppressKeyPress = $true
	}
}
]]></Code>
  <Mode>0</Mode>
</File>