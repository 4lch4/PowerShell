<File version="2.1">
  <FileID>%Identifier%</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAACgNSURBVHhe7d15dN11wedxPeqM89+c+cM5nnmc
Oc+cwYEZcRtFxRFUREd9fMqDgqKILC1QEFGWpi2ytJTSsnUFWrrQPW2z70mbfd/37Wa9yb03+55S
FoHPfL+/NJCmQVtIoOX7fp/zOqXpzb3JLSffz703bT9BRERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERE5Gj5hv8zn/mM/9JLv+S/5ZZb
/IsXLwEAABeIO26/3X/llVf4P/3pT/s/+clP+s253uqd8H+vT33qU31f+MIXdN1112ndU88pu7BS
Pv/AlM5+AABwHmvpGlS9r0sHD0foDzfdpIsuukjmQb1OHfN/N789/COiE1Xu61V2daeyq9oBAMAF
IquyXeUtfcrKK9WSxUv02c9+9o1TZ/x7d+mXvuRfs/YpVZjDP6uyTdmG/REAAFw4MipaVdU2oPCj
Mbr829/+xwPAvuafWVCpvBq/csyKAAAAF6bMijb5uga0fPmKfzwAlixZ4u8MjSjXDoDqDgAAcIGy
LwUEh06e/QDw94x4zwDkmncGAAAXJvv9AF39kwoLW362zwAMK7+uy4yATgAA5l9tpwrru1XcFFTJ
Aipq6FZ+rd+7TftjUUNgzsvNl+LGgApmnJ8F9V3mbXNfdr7Yz2n6c5zNPgvQ3X/iXAbAiPmgp+40
AADmmz0kk/LqtDsiSzsPZ2jnkcz5deo6Y45XmNszB7G5vdyqDh1JLl6Y2zN2hGdob1SOjhc3q9Dc
nr3NtMJGvRyZs2C3aa83IrVUedVTA2e2XDMCugfOYQD4zQAoNIvCfvDvyVzxTPl1QeXX95ymwKrr
NqZ+swEAsI+Ik3LN4X84XfHHy5WUVanEzIVQoX2RWYpIKVVpc48OxOQpPC5vjsvNk6wqxaSVaFd4
urIq2nS8xKdd5oCOO1ZqPsequd/nA5i63yp0MCZHh+ILvWcCZt/XeeZ8DpzTAOgZUZH5DbJPz5zB
3EBecZVy8guVU1BslJj/LlZuboZyMmOVnRFtxCgr3fx3ZoJy8vLMQOj03m/O6wMAOKXM12MeiZdo
X1S2qlrtA0VzRpgHivPJPjAt9wWVkFFhHiVnqqK1T1v3pCirtNkMEPNxzL68UVTfZYZCyPs7cOzH
OBf7FP/s951mr6PS3Oa2/ak6VtysxJw67Tx0/NTneOZl7Y/2+uz12tu0t11oXzJomLqPylvMbZq3
2Y9r+vKzr6e0KaDj+XV6YV/aqfc//b62L+cHBl+ZrwEQVK459PMrGs2Nd3lvyy1tVXnUr9UW81W1
Jf1YvtgfqD7ye8rf/t+UEb9VBfW9ZwyAosYelfr6vFVmX6Px3tZk7lz73+Y2SprNr9lfn2YuV2yu
o9hexv4GzLiuwvr3evvMXzd3rrke7/USc2faj8d7n1O3DQD4cNjD7WhqmQ7F5qnMfE1OL21RRlnr
vEo355I9LJOzq7XraJY3AF40h2ROeYv3jXGzL59Zbt+nRYcS8rT9YJJeOpQyS7J2hKeaQ73aXLZN
Gebys68jvdSn8uagd+jblwGScuu150im97bj5temLmc/1xalG/Y2k/JqzUBJ07YDSToYl6vsinal
FjRo1xH7tkQdiM0x19uszOnbeOc6pv47t7pTGUWN5rLH52EALJ4aAMVNZnWYQ/IMjSHlFpapsLZD
xb4BlbQMKq/SrJAj/6LXWtdLY+lS7wGpf6sqDn5NSUefMgdzvzcopq7DfpNESAXllUpIy1Jibo3y
GnpVYt6WV1qhjErzQVe3KC0zW3Fp+UrKLFLi8RzFZ5Qpq9L8JuWV6VhJqxkL9kDvNddlr69TWYXV
5tc7Z9zOtJBKGrqUU1isuJRspRa3qLCpT8V1HcourlBWtRkbZjic/j4AgIVS3tKrCG8A5KvCPMq1
f1Qtu8p+x/r8yao0Z5T52p6cXaPdR7NV2davF/enKbei1XtafPblC8zZtDc6Qysffkrrn3peTz/7
4mmeeXabnly/RY89+YL38eZ4f0vu6ddh317hC5kBkO49/Z+cZwaAHR/mbfawty8LZJkD3so+9Tmv
Wr9NGzft8G5z2YontfGlCD289gWteWKTnnlum1abH1/cH+99fFPvfzr7On9mcZMZLce9YTX7vi4w
D4DPcQCMmkfg9hG1PVxPV2IeNecWlSm3qtEc3OZOM4evvUMLDi7SibplUugFvdVqfmy5Sbnb/kmx
h58z1zXgDQrvOrxH6mb1JCQrIiFBh2PTlFTgV1mzT7HxSUot7VZxjU8pqamKTIjXnh27tfdooqLS
CpVpbic9q0CpZgAU1DabkVCh3IY+8z9Tk2IORSg6u1lF3qN8c+h77LMMPSqorFZsVIIiEuN1OC7P
HPpmJVWUKTLuuLJq7NMuZ36eAICFYR+NR6aVKzyuQFWtvd4359lvYjtDjV/5/8Cc72fkVnV6zy6k
5tR634RX1T6gbfuPKc+cI/bZ67xq+77vKvP1a/2WAwo/FK336o3XX9d9y57wHr3n13afcR25VX5V
m0FjvwfAPpuQkt+gvRFmfJjPMdMe+nYomGFi2Y/Pvs/yR55TQvwx7/o7Ovy65y+PaePmXd7PX3/t
dT3x5GZt3hXpnZ32/XIscz3eX/RjRoR9nT+rpEkvmdFhh9Xs+9o+ox4cPHn2A6Crd1RlLVNPu89W
1tKv/JJK5d11nbKu/a6Sf/FdpT39jNIP/1bjRddIvlv0dtUPpar/rfTnPqvIg5vMBzXkPVr3rsMe
0A01io4uVFGbWTS5heYRfqUyc3KVkN+kUnO7ZeYyFW2jqu5oVdyROCWVBVXZMeS9RlLRNqjK9j4V
lOUrfF+8jtX1m2XXovijMYrLazHvP2AuZ27HDIDSJnv5kHJLixUTX62KQLeSk3KVVlCj1LRspVR0
m/V56uMCAHwo7GEcbb7uH47LV7UZA9OH4Wz5tV3egTd9aM7mXabGHuZnvr89jMvMOZCSW6M9ZgDU
dA5p+4Fjyq9sU5F5VGzfb6Zyc3Y8+8JhHTgY6R2+e/Ye1dp1W82j8O16/ImNamxq0etmADxgHqXb
lwAK6s68jrzqLu/zsQPAXia1sMkMgCxVt/WZA9uMEjNY7FP2lr1sgRkR8VmVuueBNTpyNN673bb2
Dp048YqGh0f02OMbtPrpnd6BbwdH7vTnZ4eP/WN+5nrso3z7fQ07zACwz3LMvq/tcAgNneUAsP+M
oB0AFeaK7JqYraJ9ULnF5cr54SUaWP2ASn/2PUUuuU3x+29Qd+w/6WTO/9BE2n/UK+n/TnGrPqGI
/RvNBzWscnOnTF2HOdxbAso8nqL9hw7oYFy20rKLlJBersKWEVV3DnqHcrkZGhWtjYo9HKOE4k6V
tw2YEeDX8dR0JeQUm0f0Edq1fYd2R6Qro7peSVGxistvMx93UNnZGQo/HKlDR1J1rDag8sY2JcdH
ad/BgzqSWq5jGVlKMGOhonPEu8Ombg8A8GGoMV/nY9KrdDihUDVmDNjD0x6G7zCHq7VlR4TuX/6k
HrBWrDvNnx9co0efeF7JubXmkOs9/f2N/BrzAM88aEzNq9OeqFzVdQ9r+8F0FVTblwZC79zGtMq2
IW3YdlQ7dx3Qqydf0ZKlYVq35ZBejszUzXc+pKNH4zQyMqz7w9Z646Ow4czryDfnjf18dh3ONJdp
974RcK8ZH7Xt5oGzGTP2T8XZ1+StglM/r2wdUKw5/xbftVKRkQneCBgbG9WqNRu0/LFNKjAHvH1G
Pu/U5afln2IP+eyyFu+PIFZ3mAfAs+5r++C7Z/hVhS07ywHQ3TtmHmUPeE/TzGYfieeZAZDw029p
dN0qFV59pfbddbeSj96rI2v+u8KfuFgHV39R+1b9T70Y9s9Kin7Ju2PtoHj3esx/+wJmhZkPvtGn
1PQ8HStsMIutUdnlPpWYJWbvlMq2ZsUdjlWiGQAV7UOq9ncqOTpW0Rm1yi0v1tGD8UqtCpmPtVUJ
EeZyRa0qKCvQ4QPRisuu0rHkWB1MrVSJz95el4rMnVVSX6uE5EJlVfmUU1rnLbEy+6zCjM8RALBw
av1Disk4NQA6Br1HtzMPUvu9WxllbebgXyu/v0t9vf3q7e07TX//gLZs3aWtL8ea82XotPe37GFc
YR5w2gGwNzpP9YGRqQFgHk2/1wCwr78//8IujZqDfrV51H9/2BN66NFndPef/qrUtAx1dnR4LwFk
V9o/2fb3B4B91H682Pd3B0BRfVAZpT6tXL1Z659+XoFAt+rrG8zn7FdxSZn+8uDj5vOLUVGjuf56
ext/ZwCY27TDavZ9bR902wGw7KwHQN+Yqsxvin10PFtV57Dyy6q06xsXK+XL5pD/D5/RtptvUmp5
s/abR9cH00p1ILVMsceKVFBUqtz8QpWbw76qfdb1mZ/XmkVWUFKqxOwSZebkKSLyqA5FxSupsEvV
5naq280AOGIO9lK/GR7DqunyKzUuXrHZTeYwr1RUeKqyfGOq62ozAyDODIAW5eWna+/L4ToSn6Sj
0XGKNGOhzIyJKvP+dd39ysjIVmpRjY6lpSg88ojCYzOVWd1vbs8OjhkfHwBgQdR1DSs2o/ofDIBW
3XvfY+ru6tTQYL858HtPc/LkhDZu3KbNO6O9B4gz39+aPQAag2PafmjqGQD7TeeF5jIzVbUP67kX
j2jr1h0aHx9Rb09IoWBAQXMo9/QEvdv0+Zp17/2rvKfz7cc4+zoKzG3WnhoA9sHl8ZKWqQFgPkf7
p9HsN8EXmkPfY97ffp/aqnXbtGHDNg0NDai+od4MjNXabIbNoPmca2trdb/5+ctHj3nPvtvBYJ/y
t6/r2+uyyswjfDsA7B91tMNq9n1tH3z3jLx2tgNgsTcAqjuHvNdpZqv2j6jQDIDDYfdp+82/15Y/
/EExWzZoa3q7ViVP6vGkE7p9z5DWHypRbVObuWy1ypu7Vd1x+vVV+4dVZR79pxwvUHZTs1KSClTY
PKCK5lrFx5eqvHvM3Gk+xZsBkFTaZYbHiBkMXUozAyAuxw6AckWGH1Nu2wk1BDqUaAZAUkmb8osy
dSDc/CZ3nVRL30k1Buz3Egyq2vwPV1ZeroTMcuXX15jbqFTNwIhy8wqVnNmoKrMOq2d8fACAhVHf
Paq4zBodMQOgzhxa9tGtPdSm2W8at095r3j0Wa1/arOe2/CCnn3udBs3bdMDYat1MC7HHHLmgJ3x
/laBOSztAXjMDIB9MflqCo173yhXZAZAaXPvOwfotEozIvZGZejB5au9696w4UVt2Hi69es3mUfr
G73D3L62Pvs67MFeZx6Fv3wkw3ut3n4j4L7IbDWY88f+0Xf7zMM736RuPgb7vXYPr9mip5/Z4g2P
B8xh/8wLh7Ri1SY9vuZZvfDCLq3865Patj/BPLof9e4XOxrsgLHXVWyus7K1XzmnBkBd18gZ97V9
Nr/XGwBhZzcAAn3jqjVXZL9pYjb79oKSCpW3dquys0dlTa2qbmzSmgMlWhv/plZFS4vWjips4zE1
tNgBUOX9xQi1Zji8ez3D5nAPKTsrXfHZLarrHVZ+TqaORkbqUHSCkgq7zaP9UfM+PsWFxyipzP58
TPXBbqXGxik2x6fylnYlHH5Ze+LylNfYrNSoOCUW+1Xd1qakOPt6f6wiYhIUlVVvxsOY6lpalJSc
rvTKHtV1h5SenKjwqAiFx2Upq2bAe31o5ucJAFgYjcFx87W/VkcTi1RvHgzaR9P2MJuppKlXidnV
2rIrRpt3RXs/zrTxpUgdiMk2j/a7vcvOfn974FabR83H8xt0ILZAvt5J7QzPUHGN/Y7/vjMub6/D
Pk2/LzrTu+7Zt2c/hq27zQPS3No5b88qaugxn8+QGQBZ3nXZbwTcH5Wrpu4R78C3w8M+Yn9Hixko
RY16cV+CNu2I1H5z2/Yb5bPKW7Xt1Nv2mVFiP0f7TYr29fyy5j5j6rpKzX/bzzGvos37o44NgbEz
7mv7YL5v9PVzGAD942ahmUfg5jdmtjqz3PJLys0j9W6PPeBrzAEctjldP19RrJ8tK9I3F2fpgaeS
1eDzeWOhqiVklok90GdcV6d5tN9kX38312l/ra1bBRX1yq1sVYVZOnXe5fpV1uBXuVl3dkDUdg2q
orHL3HH93nVUNDQrx1y+zL7WYd5e3jrofXw1rV3KL6s3q6jerMiAauz7tveotMmMlo5R1ZsRU+1r
974HwL6GUm3GxdTtAQAWWlNoQgnZdYpIKlajObRKmuyfOjtTZbs9cyY8tbPYt9X4x7zzwPuL42ax
b6s1DzbTCxu9AdDSd8IMgEyV1HWpwpwVc12+zDfgXed73Z790X5Ms993mv08mswZZP/svz20s8rb
dSA6V83BMe/X7cf6rqk/8WZfnq4PTJoHuJPmjBs355h91G7fNuG9zd6u/Z64UjMWyk+9n/ej+bm9
HvvsekFVuzcA7LCafV/XGOc8ABoC497TCbPVm9+s4qp65ReWKL+4TPlFJSooLlV6jv0Le/KVeCxP
SeZH+/MC82v5RaWq6ej3BsXp12UOYnMbDebO8n7ePa7G0KRhPmmzlqYv02A+Ift00WnvE5j6ub1z
GkNTv15vLjd9XfYyU9dlmDt+6vrNdZm3T1/3O5ex1+9dNwDgw9DcM+kNAPsMQOegfal2Qk3ma/F8
sl/b2/tfMQOgSfvNAGg1/73jUIbKGwLy9ZyY830+qMbghNr7Jr1nAOzLBNnlHd4zAB39J8z5ZH7d
njvmDJ1iLz+mpum32fc/9bZ3L3Pqcqf9fKZxtfSeUGF1h3aZ27TDavZ9bZ+17xt749wGgP1EvIP1
vZgr9Xj/PWo++TE1h6b4DPtz+/Yz3g8A4LTmngnvNfID0XneU/TZJS3KKvbNrxKfMouadDi+UCn5
jWoxAyA6rUJRKSXm15vPvPw8sJ9HSnatDsYUqLLNPGpv6tWBmHyl5tYt2OdoPxf7TEpcRrU3AGbf
13XmwXf/uQyAYL9dY5NmsYzNaWqRnAOzfOa6HgCAe+y50GwOq5yKTh2KLzaKFJ5QPO8OxhUpJa/J
O4PsI/TazhFzUNZ4b5/r8h+U/TwOJ5aquCFkbm/CfI6T3t9JMP1rsy8/H+znkpBVp3r/qHe/zr6v
67snznEADJgPvOfE1FMSM8081AEAeB/sy7H2R1/vCbUNnFxAr6ql7xXv/PJu0xzKrf1Tb5/78vPD
vsRhb8+y/z3XZebP9Oc4cepzPF2DefvA+N/ObQD4el7xFsxMzQAA4Lw1+9xuDE6e/QC47bbbzhgA
9hs0WnsnNDI6pmEAAHDeGR0bU2effebhzAHw4IPL3v8AaDMDYMJc+TgAADjvTI6Pyb9QA8DewBgA
ADjvTDAAAABwDwMAAAAHMQAAAHAQAwAAAAcxAAAAcNB5MQAmJycBAMA8GR8fn/O8nem8GADDw8Pq
7+8HAAAfkD1T5zprZ/tIB8Brr72mqqoqXXzxxfrmN7+pb3zjGwAA4H267LLLdMkllygxMVFvvfXW
nGfvtI90ALzxxhvKysrSRRddpD179mjnzp3asWMHAAB4H8LDw/X1r3/dO09tc5290z7yAZCdne19
sElJSYqJiVF0dDQAAHgf0tPTdeWVV2r37t0XxgD42te+pri4OEVGRioiIgIAALwPqampuuKKKxgA
AAC4hAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAA
OIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiI
AQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEA
AICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACA
gxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMY
AAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAA
ADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4
iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgB
AACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAA
gIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICD
GAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgA
AAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAA
OIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiI
AQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEA
AICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACA
gxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMY
AAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAA
ADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4
iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgB
AACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAA
gIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICD
GAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgA
AAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAA
OIgBAACAgxgAAAA4iAEAAICDGAAAADiIAQAAgIMYAAAAOIgBAACAgxgAAAA4iAEAAICDGAAAADiI
AQAAgIMYAAAAOIgBAACAgy7IARAfH6+oqChvBAAAgHOXlpZ24QyArKwsXXrppYqNjfXWy9GjRwEA
wPuQkpKiyy+/XDt37jy/B8Drr7+usrIyfe5zn9NXv/pVfeUrXwEAAO+TfUb985//vPeM+ttvvz3n
2TvtIx0A4+PjGh4els/nU21trerq6gAAwPtkz9Lm5mYNDg56Z+xcZ++0j3QAWPYDfPXVVwEAwDyZ
mJiY88yd6SMfAAAA4MPHAAAAwEHnxQCwLwNMTk46Z677AgAwf+xT4XN9/f04+0ev/U87L74HwH4j
YDAYVCAQcEZPT49GR0fnvE8AAPOjt7d3zq/BH2dDQ0NnNQI+8gFw4sQJtbW1eX8PQEZGhtLT0z/2
jh8/roSEBPX395/VN2oAAM6NPQDtgyz7F+PYvx1vrq/FHzf2DLV/q25NTY1eeeWVOe+Xmc6LAWD/
yIL9GwFdWmp2BNjPlwEAAPPPDoCRkRHva21HR4cTzzLbM6W4uFgVFRUXzgCwfw+AHQChUEhdXV1O
YAAAwMKZHgD2kbF9lrm7u3vOr8UfJ/YMLSoqUmVlpbsDoDvY4z29bvWGAuZt/jMu81FjAADAwlno
AeA3AqF3zxpPX5+Cgbkv/2FwfgAEe3rV016l46kpSkk+ptKGDoX6ehU4z0YAAwAAFs7CDoBuBbr9
aq2vUE7GcaWmmPMmNVVp6Vmq9tlfe/eydiT0mTPIfr3v7TEPSP0LdxY5PQC6A2aNNRdo8z2/0Zf+
75W66kff03WL1ymjytwxvSF1z/E+HxUGAAAsnAUdAOasGemr0/6Hf6dLvvh1XfHD7+vKK67QVdfc
qD15QfWF7G2ZIRDwq6Eiz4yDHBUWF6qovEnd3rPSc1znPHB4AATMId+ptFU36ce/e0YFPSOafNWv
hGW3aNF9L6kiMKKJkT51m/Xl7w5pcKhfoUBAwZ4BjZtDeGJiXEN9IfMb1qPhkWGNjE9qcnxYfcFu
+c1vZN/gqAZ7A/L757rtc8cAAICFs+ADIFSmrX+9X/euTdbAq+Ma6OtTX/+gRkbHzFkSVFd3r8Ym
RtRYmKTwvS9rzcoVeuT5HA2cGFRggZ4FcHYA2Ef/gcZ4/elXS3WwyOc95RIIDmq4PVK33rlKew/s
0/bdqWoO9am3NUcvbQ1XQV2rGnL26o83/Ea/uWGxno8rUXNDpjauXaeHFl+vG+5dp6TKLo0E2xS/
a4WeT6hUj1lv8/FMAgMAABbOwg+Acj3/yDLdtz5NQ69PanR0Qv2tRdr08N16NqZWo33F2hq2VE9s
O6RtTz+i6779v3TpD+9TXGWr+dq/MM9IuzsAgn0KlO7Ur697TAnlLQr1BhXsHdJgV7Ie/NHtCnvk
bi36/WbVDIxouOGgbrz2fu2IjNCGpddryUMbtOXxO/XLGx/W9i3L9YMv/0KPPPOwrr3sZ/rzxuPy
d6fpnu9cow05DeoLmWU3x+2fKwYAACychX8JoFZ7H7pBF1/0f/SDH12lH171I133+yf19Lpb9Ou7
79DqB2/UksV/1Jq1j+mX/3qrbv3NL7Totk0qarMH9cK8DOD2AKg6oD/8cpliKzs0NNCs4rwCFcZt
043X/Vlr14Xpd0u3q65/WENNkbr75oe05dkH9N3P/7Muu/r/6adXX6GvXvpj/eWv9+lXv31OtZNv
qHL7XVqy8klF7VurX/x5t3yBkIKB+fmfiAEAAAtnwQdAT6W2P/xH/fbOZ5WYmabE+HilZdZr8GSL
di/9lv79f/65Iio7VRG3UXctfUyrVz2qx7flqH9iQIF5eil5NncHQHdQoUCNdtx+nZY+k6ahN/qU
8fyjuubLX9flK55X9N71uvmGF9T6pqSOGN160zKz1Jbpmm/dpHBfr4YCjcqKSlTU3tX69c2bVBYa
1YmGA7rhltu16EfXaVtOpffdnPP1tA0DAAAWzoIPgGCZtj6yXCs2F+otc6y8/bc39ebbb+u1UJbW
/fbb+k//5WptSC9VScIW3bVkpVauXKnHdxRq+MQQ3wMwbf6+CbBLwVCvOtN36Maf/FLXhz2qdY/c
oxu+8x39+JZNismIUthV/6pbVj2u1X+5Vl/8zu3alZaol5Yv0u8Xr9FTDy/RbxeF6bnNK7ToN+tV
7De/wZPd2nvHN/RfL7tDxxqD6rN/hGOO230/GAAAsHAWegCM9lbqxQdu0Leu/J1Wrn5EK1es1MOr
HtHt11+tGx/cqpSox3XjNf+i2++4S3+4Y5XWLr9JV/3kL4qt9inA9wBMmc8BYL9bf8z8pveWR2r5
A/fr/gdW6XDEUa1YsVnpNQ3Ki3laf7zzTt254iGt2xSl2o6A/I3peuaP5m1LH9De9Cq1NOTqwIE0
NXSZ3+CTIYXfdaP+9Gy4mkL9Cs34s50fFAMAABbOgg6A7oB6Q20qit+h5X++R0vvXKqlS5fqTnO+
/OmhZ5VSPyi9FVL6tqf19Ja9Ck/IVVHqbv313kd1KLdW3X0MAM/8vQTQ7f0Le7fdtlhX//QX+tWv
fmX8UosWLdKVV1yuX5ufB/uGdfLkSU2Om49tdEBB8z7dwX6Nev+E4sTUHwMM9mpodERjrSXaGvYT
XfK9+5RY2qW+gfn55r9pDAAAWDgLOgAMv9+cOf3Dmpjxz/DasrMy9POfXKXvf/9q/fyaa804uF2D
/b3eHyWfmBzXwAL+ZUBOPwNg/zEE+68+RUVFncb+S4OJiYnmN8x/dv8TmHUX6mxWYXqikgqr1Bkw
w2Cuy30ADAAAWDgLPQDmYs+w6urq086fpKQk79c+rNu/IAdAbm6u93cp20/ggxgeHvb+CcjZ7P8I
c11+bkEFQz0aGBrR6NCAeszbgmdc5oOx/1MyAABgYcwcAPbBn32GeK6vxfPJ/ouDfX19p5099kya
67ILwZ6hJSUlF94AiI+PV1lZmffBf9zZf67Rfr72fxQGAADMPzsA7AFsH4Hn5+fP+bX448aeocnJ
yRfOPwdsD0D7SLi8vNz74O2PH3f287RPE9llaP8nnet+AQB8cPX19SotLXXifLGfo2VfbjibB5cf
+QCw7AdqvznPJWezzgAAH4z9WjvX1+CPs7N9Zvm8GAAAAODDxQAAAMBBDAAAABzEAAAAwEEMAAAA
HMQAAADAQQwAAAAcxAAAAMBBCzoAJs2V2xsAAADnlxMTY+qa7wFg+UIT6uoflx8AAJx37BndYs7q
xhln97wMAMuuCgAAcH6aefhb8zYAAADAhYMBAACAg859AAxOqrnnpPeOAADgwtQQPGEGwJtnNwBu
vfW24Ojk3zR8Qt47AQCAC9PgxFt69U2ZARD29qlj/r37t3+7tjUsbMUbYWHL31i2LAwAAFzAli9f
+cb111//yqljnoiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiMihPvGJ/w/NcOfiq4a69gAAAABJRU5ErkJggg==</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formMain" children="Controls">
    <Property name="AutoScaleDimensions">6, 13</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">584, 362</Property>
    <Property name="Name">formMain</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">%Title%</Property>
    <Event name="Load">formMain_Load</Event>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewResults" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="AllowUserToDeleteRows">False</Property>
      <Property name="Anchor">Top, Bottom, Left, Right</Property>
      <Property name="Location">12, 12</Property>
      <Property name="Name">datagridviewResults</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="Size">560, 309</Property>
      <Property name="TabIndex">2</Property>
      <Event name="ColumnHeaderMouseClick">datagridviewResults_ColumnHeaderMouseClick</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonExit" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="Location">497, 327</Property>
      <Property name="Name">buttonExit</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">E&amp;xit</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonExit_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonQuery" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">12, 327</Property>
      <Property name="Name">buttonQuery</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">&amp;Query</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonQuery_Click</Event>
    </Object>
  </Object>
  <Code><![CDATA[#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			$Item,
			[Parameter(Mandatory = $false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
			-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView])
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param (
			[ValidateNotNull()]
			$InputObject,
			[ValidateNotNull()]
			[System.Data.DataTable]$Table,
			[switch]$RetainColumns,
			[switch]$FilterWMIProperties)
	
	if ($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @( ,$Table)
}
#endregion

$formMain_Load={
	#TODO: Initialize Form Controls here
	
}

%ResultsFunction%

$buttonExit_Click={
	#TODO: Place custom script here
	$formMain.Close()
}

$buttonQuery_Click={
	#TODO: Place custom script here
	$results = %ResultsFunctionCall%
	$results = ConvertTo-DataTable -InputObject $results -FilterWMIProperties
	Update-DataGridView -DataGridView $datagridviewResults -Item $results -AutoSizeColumns DisplayedCells
}



$datagridviewResults_ColumnHeaderMouseClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	if($datagridviewResults.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridviewResults.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}

		$datagridviewResults.Sort($datagridviewResults.Columns[$_.ColumnIndex], $direction)
	}
}
]]></Code>
  <Mode>0</Mode>
</File>